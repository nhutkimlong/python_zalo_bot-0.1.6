#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Demo ng·∫Øn g·ªçn v·ªÅ t√≠nh nƒÉng l·ªãch s·ª≠ tr√≤ chuy·ªán
"""

import asyncio
from baden_tourist_ai import BaDenAIBot

async def demo_conversation():
    """Demo cu·ªôc tr√≤ chuy·ªán li·ªÅn m·∫°ch v·ªõi l·ªãch s·ª≠."""
    print("üéØ DEMO: L·ªãch s·ª≠ tr√≤ chuy·ªán gi√∫p bot hi·ªÉu ng·ªØ c·∫£nh")
    print("=" * 60)
    
    bot = BaDenAIBot()
    user_id = "demo_user"
    user_name = "Du kh√°ch"
    
    # Cu·ªôc tr√≤ chuy·ªán demo
    questions = [
        "Gi√° v√© c√°p treo bao nhi√™u?",
        "C√≤n gi·ªù ho·∫°t ƒë·ªông?",  # Bot hi·ªÉu ƒëang h·ªèi v·ªÅ c√°p treo
        "C·∫£m ∆°n b·∫°n!"         # Bot c√≥ th·ªÉ t√≥m t·∫Øt th√¥ng tin ƒë√£ cung c·∫•p
    ]
    
    for i, question in enumerate(questions, 1):
        print(f"\nüë§ C√¢u h·ªèi {i}: {question}")
        
        # L·∫•y ng·ªØ c·∫£nh v√† t·∫°o ph·∫£n h·ªìi
        contexts = await bot.retrieve(question, k=3)
        response = await bot.generate(user_id, user_name, question, contexts)
        
        print(f"ü§ñ Bot: {response[:200]}...")
        
        # L∆∞u v√†o l·ªãch s·ª≠
        bot.add_to_conversation_history(user_id, user_name, question, response)
        
        print(f"üìä L·ªãch s·ª≠: {len(bot.conversation_history[user_id])} tin nh·∫Øn")
    
    print("\n‚úÖ Demo ho√†n th√†nh! Bot ƒë√£ hi·ªÉu ng·ªØ c·∫£nh t·ª´ l·ªãch s·ª≠ tr√≤ chuy·ªán.")

if __name__ == "__main__":
    asyncio.run(demo_conversation())